name: Terraform Deployment

on:
  push:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ secrets.JENKINS_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.JENKINS_SECRET }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  PUBLIC_SSH_KEY: ${{ secrets.PUBLIC_SSH_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, test, prod]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # Create terraform.tfvars dynamically for non-sensitive vars
      - name: Create terraform.tfvars
        working-directory: envs/${{ matrix.env }}
        run: |
          if [ "${{ matrix.env }}" = "dev" ]; then
            LOCATION="West US"
            ADDRESS_SPACE='["10.0.0.0/16"]'
            SUBNET_ADDRESS_PREFIXES='["10.0.1.0/24"]'
          elif [ "${{ matrix.env }}" = "test" ]; then
            LOCATION="East US"
            ADDRESS_SPACE='["10.1.0.0/16"]'
            SUBNET_ADDRESS_PREFIXES='["10.1.1.0/24"]'
          elif [ "${{ matrix.env }}" = "prod" ]; then
            LOCATION="Central US"
            ADDRESS_SPACE='["10.1.0.0/16"]'
            SUBNET_ADDRESS_PREFIXES='["10.1.1.0/24"]'
          fi


          RESOURCE_GROUP="${{ matrix.env }}-resource-group"

          cat > terraform.tfvars <<EOF
          environment         = "${{ matrix.env }}"
          vnet_name           = "${{ matrix.env }}-vnet"
          location            = "$LOCATION"
          address_space       = $ADDRESS_SPACE
          subnet_address_prefixes = $SUBNET_ADDRESS_PREFIXES
          resource_group_name = "$RESOURCE_GROUP"
          EOF


      - name: Terraform Init
        working-directory: envs/${{ matrix.env }}
        run: terraform init

      - name: Terraform Validate
        working-directory: envs/${{ matrix.env }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: envs/${{ matrix.env }}
        run: |
          terraform plan -var-file="terraform.tfvars" -out=tfplan \
            -var="client_id=$ARM_CLIENT_ID" \
            -var="client_secret=$ARM_CLIENT_SECRET" \
            -var="tenant_id=$ARM_TENANT_ID" \
            -var="subscription_id=$ARM_SUBSCRIPTION_ID" \
            -var="vm_public_key=$PUBLIC_SSH_KEY"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: envs/${{ matrix.env }}
        run: terraform apply -auto-approve tfplan
